<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mutiny.demo.dao.FileOtherMapper">
  <resultMap id="BaseResultMap" type="com.mutiny.demo.pojo.FileOther">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    <id column="File_ID" jdbcType="INTEGER" property="fileId" />
    <result column="File_Name" jdbcType="VARCHAR" property="fileName" />
    <result column="File_URL" jdbcType="VARCHAR" property="fileUrl" />
    <result column="Type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    File_ID, File_Name, File_URL, Type
  </sql>
  <select id="selectByExample" parameterType="com.mutiny.demo.pojo.FileOtherExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from File_Other
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    select 
    <include refid="Base_Column_List" />
    from File_Other
    where File_ID = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    delete from File_Other
    where File_ID = #{fileId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mutiny.demo.pojo.FileOther">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    insert into File_Other (File_ID, File_Name, File_URL, 
      Type)
    values (#{fileId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mutiny.demo.pojo.FileOther">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    insert into File_Other
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        File_ID,
      </if>
      <if test="fileName != null">
        File_Name,
      </if>
      <if test="fileUrl != null">
        File_URL,
      </if>
      <if test="type != null">
        Type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mutiny.demo.pojo.FileOther">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    update File_Other
    <set>
      <if test="fileName != null">
        File_Name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        File_URL = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        Type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where File_ID = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mutiny.demo.pojo.FileOther">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2020-02-06 12:44:57.
    -->
    update File_Other
    set File_Name = #{fileName,jdbcType=VARCHAR},
      File_URL = #{fileUrl,jdbcType=VARCHAR},
      Type = #{type,jdbcType=INTEGER}
    where File_ID = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>